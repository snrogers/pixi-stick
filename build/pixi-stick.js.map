{"version":3,"file":null,"sources":["../src/util.ts","../src/general-controller.ts","../src/joystick.ts","../src/drag-listener.ts","../src/events.ts","../src/stick-controller.ts","../src/stick-area-controller.ts","../src/index.ts"],"sourcesContent":["import * as PIXI from 'pixi.js';\n\nexport function magnitude(vec: PIXI.Point) {\n    return Math.sqrt((vec.x * vec.x) + (vec.y * vec.y));\n}\n\nexport function unitVector(vec: PIXI.Point, outVec?: PIXI.Point) {\n    outVec = outVec || new PIXI.Point();\n\n    let mag = magnitude(vec);\n\n    outVec.x = vec.x / mag;\n    outVec.y = vec.y / mag;\n\n    return outVec;\n}\n\nexport function sign(value: number) {\n    return value ? (value < 0 ? -1 : 1) : null\n}\n\nexport function isMouseEvent(event: MouseEvent | any): event is MouseEvent {\n    return (<MouseEvent>event).button !== undefined;\n}\n\nexport function isTouchEvent(event: TouchEvent | any): event is TouchEvent {\n    return (<TouchEvent>event).changedTouches !== undefined;\n}","import { Joystick } from './joystick';\nimport { IStickOptions } from './istick-options';\nimport { IController } from './icontroller';\n\nimport { isMouseEvent, magnitude, sign, unitVector } from './util';\nimport { events } from './events';\nimport { dragListener } from './drag-listener';\n\nimport * as PIXI from 'pixi.js';\n\n\n/****************************/\n/*** The Stick Controller ***/\n/****************************/\nexport abstract class GeneralController extends PIXI.Container implements IController {\n\n    protected _id: number;\n    get id() { return this._id; }\n    set id(value: number) { if (!this._id) { this._id = value; } else { throw new Error('id is readonly'); } }\n\n    protected _options: IStickOptions = {\n        touch: true,\n        mouse: true,\n\n        axes: 'xy',\n        deadZone: 0, // TODO: Implement deadZone\n        nub: null,\n        nubSize: 0.3,\n        well: null,\n        wellRadius: 50,\n    };\n\n    protected _joystick: Joystick;\n    protected _dragListener: (event: Touch | MouseEvent) => void;\n\n    /** _axes is used as temporary storage for coordinates while they are being transformed.\n     *  Without _axes, we would either need to either:\n     * \n     *  1) Perform the same event.data.getLocalPosition() call multiple times per event (esp. dragListeners)\n     *  2) Accumulate garbage by creating temporary PIXI.Point instances  (esp. dragListeners)\n     *  3) Assign the localPosition back to the event.data, risking issues where we might accidentally perform\n     *     the global -> local transformation multiple times\n     */\n    protected _axes: PIXI.Point;\n    /** Keeps track of eventListeners so they can be removed from the window on dispose() */\n    protected _registeredEventListeners: [string, (event: TouchEvent | MouseEvent) => void][];\n\n    public isTouched: boolean = false;\n    public identifier: number;\n\n\n    /**************/\n    /*** Events ***/\n    /**************/\n\n    /** Fires when the stick is touched */\n    public onTouchStart: (axes: PIXI.Point) => void;\n\n    /** Fires when the touch moves */\n    public onTouchMove: (axes: PIXI.Point) => void;\n\n    /** Fires when the stick is no longer touched */\n    public onTouchEnd: (axes: PIXI.Point) => void;\n\n    /** Fires when the stick is tapped (Configurable. See IStickOptions) */\n    // public onTap: (axes: PIXI.Point) => void;\n\n    /** Fires ANY TIME any axis changes */\n    public onAxisChange: (axes: PIXI.Point) => void;\n\n\n    /*******************/\n    /*** Constructor ***/\n    /*******************/\n    constructor(x: number, y: number, options?: IStickOptions) {\n        super();\n\n        this._axes = new PIXI.Point(0, 0);\n        this._registeredEventListeners = [];\n\n        this.x = x;\n        this.y = y;\n\n        if (options) {\n            for (let prop in options) {\n                if (options.hasOwnProperty(prop)) {\n                    this._options[prop] = options[prop];\n                }\n            }\n        }\n\n        this.interactive = true;\n\n        this._init();\n\n        if (this._options.mouse) this._initEvents('mouse');\n        if (this._options.touch) this._initEvents('touch');\n    }\n\n    protected abstract _init(): void;\n\n    protected abstract _initEvents(mouseOrTouch: string): void;\n\n    /** Adds a listener to the window and keeps a reference to it so the listener can be removed via dispose() */\n    protected _addWindowListener(eventString: string, func: (event: TouchEvent | MouseEvent) => void) {\n        this._registeredEventListeners.push([eventString, func]);\n        window.addEventListener(eventString, func);\n    }\n\n\n    /**\n     * TouchStart is fired by the PIXI InteractionManager, but because InteractionManager.processInteractive\n     * does not keep a record of the recipient of TouchStart for a given touch, the StickController has its own\n     * listener on the window to ensure it is able to catch the TouchEnd event from the window (InteractionManager\n     * sends the TouchEnd event to whichever object the TouchEnd occurs upon instead of the original recipient of \n     * TouchStare so the StickController will not receive the TouchEnd event from the PIXI event system if the \n     * user's finger is not over the StickController when they release)\n     **/\n\n\n    protected _processTouchStart(event: PIXI.interaction.InteractionEvent) {\n        this.identifier = event.data.identifier;\n        this.isTouched = true;\n\n        if (isMouseEvent(event.data.originalEvent)) {\n            this._dragListener(<MouseEvent>event.data.originalEvent)\n        } else {\n            this._dragListener((<TouchEvent>event.data.originalEvent).changedTouches[event.data.identifier])\n        };\n\n        if (this.onTouchStart) this.onTouchStart(this._axes);\n        return true;\n    }\n\n    protected _processTouchMove(event: TouchEvent | MouseEvent) {\n        if (isMouseEvent(event)) {\n            if (this.isTouched) this._dragListener(event);\n            return true;\n        } else {\n            for (let i = 0; i < event.changedTouches.length; i++) {\n                if (event.changedTouches[i].identifier === this.identifier) {\n                    this._dragListener(event.changedTouches[i]);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected _processTouchEnd(event: TouchEvent | MouseEvent) {\n        if (isMouseEvent(event)) { // if it's a mouseEvent\n            this.identifier = undefined;\n            this.isTouched = false;\n            this.resetPosition();\n            this.onAxisChange(this._axes);\n\n            event.stopPropagation();\n            return true;\n        } else { // Else if it's a touchEvent\n            for (let i = 0; i < event.changedTouches.length; i++) {\n                if (event.changedTouches[i].identifier === this.identifier) {\n                    this.identifier = undefined;\n                    this.isTouched = false;\n                    this.resetPosition();\n                    this.onAxisChange(this._axes);\n\n                    event.stopPropagation();\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n\n\n    // Removes all window eventlisteners that this instance has registered\n    public dispose() {\n        this._registeredEventListeners.forEach(\n            (arr: [string, (event: TouchEvent | MouseEvent) => void]) => {\n                window.removeEventListener(arr[0], arr[1]);\n            }\n        );\n    }\n\n    public resetPosition() {\n        this._joystick.nub.x = 0;\n        this._joystick.nub.y = 0;\n\n        this._axes.x = 0;\n        this._axes.y = 0;\n    }\n}","import { magnitude, sign, unitVector } from './util';\nimport IStickOptions from './istick-options';\n\nimport * as PIXI from 'pixi.js';\n\n/**\n * The graphical component. Contains no business logic (which is handled in StickController)\n */\nexport class Joystick extends PIXI.Container {\n\n    private _options: IStickOptions = {\n        opacity: 0.25\n    };\n\n    public well: PIXI.Sprite | PIXI.Graphics;\n    public nub: PIXI.Sprite | PIXI.Graphics;\n\n    constructor(x: number, y: number, options: IStickOptions) {\n        super();\n\n        this.x = x;\n        this.y = y;\n\n        for (let prop in options) {\n            if (options.hasOwnProperty(prop)) {\n                this._options[prop] = options[prop];\n            }\n        }\n\n        this._initGraphics();\n    }\n\n    private _initGraphics() {\n\n        // Init Well\n        if (this._options.well) {\n            this.well = this._options.well;\n            this.well.alpha = this._options.opacity;\n            this.well.width = this._options.wellRadius * 2;\n            this.well.height = this._options.wellRadius * 2;\n\n            (<PIXI.Sprite>this.well).anchor.x = 0.5;\n            (<PIXI.Sprite>this.well).anchor.y = 0.5;\n\n        } else {\n            this.well = new PIXI.Graphics();\n            switch (this._options.axes) {\n                case 'xy':\n                    (<PIXI.Graphics>this.well).beginFill(0xffffff, this._options.opacity);\n                    (<PIXI.Graphics>this.well).drawCircle(0, 0, this._options.wellRadius);\n                    (<PIXI.Graphics>this.well).endFill();\n                    break;\n                case 'x':\n                    (<PIXI.Graphics>this.well).beginFill(0xffffff, this._options.opacity);\n                    (<PIXI.Graphics>this.well).drawRoundedRect(\n                        -this._options.wellRadius - this._options.wellRadius * this._options.nubSize,\n                        -(this._options.wellRadius * this._options.nubSize),\n                        this._options.wellRadius * 2 + this._options.wellRadius * 2 * this._options.nubSize,\n                        this._options.wellRadius * 2 * this._options.nubSize,\n                        this._options.wellRadius * this._options.nubSize\n                    );\n                    (<PIXI.Graphics>this.well).endFill();\n                    break;\n                case 'y':\n                    (<PIXI.Graphics>this.well).beginFill(0xffffff, this._options.opacity);\n                    (<PIXI.Graphics>this.well).drawRoundedRect(\n                        -(this._options.wellRadius * this._options.nubSize),\n                        -this._options.wellRadius - this._options.wellRadius * this._options.nubSize,\n                        this._options.wellRadius * 2 * this._options.nubSize,\n                        this._options.wellRadius * 2 + this._options.wellRadius * 2 * this._options.nubSize,\n                        this._options.wellRadius * this._options.nubSize\n                    );\n                    (<PIXI.Graphics>this.well).endFill();\n                    break;\n                default:\n                    console.warn(this._options);\n                    throw new Error(this._options.axes + ' is not a valid stick axes');\n            }\n        }\n\n\n        // Init Nub\n        if (this._options.nub) {\n            this.nub = this._options.nub;\n            this.nub.alpha = this._options.opacity;\n            this.nub.width = this._options.wellRadius * this._options.nubSize * 2;\n            this.nub.height = this._options.wellRadius * this._options.nubSize * 2;\n\n            (<PIXI.Sprite>this.nub).anchor.x = 0.5;\n            (<PIXI.Sprite>this.nub).anchor.y = 0.5;\n        } else {\n            this.nub = new PIXI.Graphics();\n            (<PIXI.Graphics>this.nub).beginFill(0xffffff, this._options.opacity);\n            (<PIXI.Graphics>this.nub).drawCircle(0, 0, this._options.wellRadius * this._options.nubSize);\n            (<PIXI.Graphics>this.nub).endFill();\n        }\n\n        // Add children\n        this.addChild(this.well);\n        this.addChild(this.nub);\n    }\n}\n\nexport default Joystick;","import { magnitude, sign, unitVector} from './util';\n\n\n\n/************************/\n/*** The Monkey Patch ***/\n/************************/\n/* We monkey patch autoDetectRenderer() so that\n * we keep a reference to the mapPositionToPoint method\n * of the most recently created SystemRenderer\n*/\n\nlet mapPositionToPoint: (point: PIXI.Point, x: number, y: number) => PIXI.Point;\n\nPIXI.autoDetectRenderer = (function (func: (width: number, height: number, options?: PIXI.RendererOptions, noWebGL?: boolean) => PIXI.WebGLRenderer | PIXI.CanvasRenderer) {\n    return function (width: number, height: number, options?: PIXI.RendererOptions, noWebGL?: boolean) {\n        let renderer: PIXI.WebGLRenderer | PIXI.CanvasRenderer = window.capturedRenderer = func(width, height, options, noWebGL);\n        mapPositionToPoint = renderer.plugins.interaction.mapPositionToPoint.bind(renderer.plugins.interaction);\n        return renderer;\n    }\n})(PIXI.autoDetectRenderer);\n\n\n\n/***********************/\n/*** Everything Else ***/\n/***********************/\n\nexport interface IListenerDictionary {\n    [key: string]: (event: Touch | MouseEvent) => void,\n}\n\nexport const dragListener: IListenerDictionary = {\n\n    xy: function (event: Touch | MouseEvent) {\n        mapPositionToPoint(this._axes, event.clientX, event.clientY)\n        this._joystick.toLocal(this._axes, null, this._axes);\n\n        if (magnitude(this._axes) > this._options.wellRadius) {\n            unitVector(this._axes, this._axes);\n            this._joystick.nub.x = this._axes.x * this._options.wellRadius;\n            this._joystick.nub.y = this._axes.y * this._options.wellRadius;\n        } else {\n            this._joystick.nub.x = this._axes.x;\n            this._joystick.nub.y = this._axes.y;\n            this._axes.x /= this._options.wellRadius;\n            this._axes.y /= this._options.wellRadius;\n        }\n\n        if (this.onTouchMove) this.onTouchMove(this._axes);\n        if (this.onAxisChange) this.onAxisChange(this._axes);\n    },\n\n    x: function (event: Touch | MouseEvent) {\n        mapPositionToPoint(this._axes, event.clientX, event.clientY)\n        this._joystick.toLocal(this._axes, null, this._axes);\n\n        if (Math.abs(this._axes.x) > this._options.wellRadius) {\n            this._axes.x = sign(this._axes.x);\n            this._axes.y = 0;\n            this._joystick.nub.x = this._axes.x * this._options.wellRadius;\n            this._joystick.nub.y = 0;\n        } else {\n            this._joystick.nub.x = this._axes.x;\n            this._joystick.nub.y = 0;\n            this._axes.x /= this._options.wellRadius;\n            this._axes.y = 0;\n        }\n\n        if (this.onTouchMove) this.onTouchMove(this._axes);\n        if (this.onAxisChange) this.onAxisChange(this._axes);\n    },\n\n    y: function dragListenerY(event: Touch | MouseEvent) {\n        mapPositionToPoint(this._axes, event.clientX, event.clientY)\n        this._joystick.toLocal(this._axes, null, this._axes);\n\n        if (Math.abs(this._axes.y) > this._options.wellRadius) {\n            this._axes.x = 0;\n            this._axes.y = sign(this._axes.y);\n            this._joystick.nub.x = 0;\n            this._joystick.nub.y = this._axes.y * this._options.wellRadius;\n        } else {\n            this._joystick.nub.x = 0;\n            this._joystick.nub.y = this._axes.y;\n            this._axes.x = 0;\n            this._axes.y /= this._options.wellRadius;\n        }\n\n        if (this.onTouchMove) this.onTouchMove(this._axes);\n        if (this.onAxisChange) this.onAxisChange(this._axes);\n    }\n}","export interface IEventCategory {\n    [key: string]: string;\n    \n    onTouchStart: string;\n    onTouchMove: string;\n    onTouchEnd: string;\n    onTouchEndOutside: string;\n}\n\nexport const events: { [eventType: string]: IEventCategory } = {\n    mouse: {\n        onTouchStart: 'mousedown',\n        onTouchMove: 'mousemove',\n        onTouchEnd: 'mouseup',\n        onTouchEndOutside: 'mouseupoutside'\n    },\n    touch: {\n        onTouchStart: 'touchstart',\n        onTouchMove: 'touchmove',\n        onTouchEnd: 'touchend',\n        onTouchEndOutside: 'touchendoutside'\n    }\n}","import { IController } from './icontroller';\nimport { IStickOptions } from './istick-options';\n\nimport { GeneralController } from './general-controller';\nimport { Joystick } from './joystick';\n\nimport { dragListener } from './drag-listener';\nimport { isMouseEvent, isTouchEvent, magnitude, sign, unitVector } from './util';\n\nimport { events } from './events';\n\nimport * as PIXI from 'pixi.js';\n\n\n/****************************/\n/*** The Stick Controller ***/\n/****************************/\nexport class StickController extends GeneralController {\n\n    /*******************/\n    /*** Constructor ***/\n    /*******************/\n    constructor(x: number, y: number, options?: IStickOptions) {\n        super(x, y, options);\n    }\n\n    protected _init() {\n        this._joystick = new Joystick(0, 0, this._options); // ERR: x and y should be computed based on stick type, i.e. static/semi/dynamic\n        this.addChild(this._joystick);\n    }\n\n    /**\n     * TouchStart is fired by the PIXI InteractionManager, but because InteractionManager.processInteractive\n     * does not keep a record of the recipient of TouchStart for a given touch, the StickController has its own\n     * listener on the window to ensure it is able to catch the TouchEnd event from the window (InteractionManager\n     * sends the TouchEnd event to whichever object the TouchEnd occurs upon instead of the original recipient of \n     * TouchStare so the StickController will not receive the TouchEnd event from the PIXI event system if the \n     * user's finger is not over the StickController when they release)\n     **/\n    protected _initEvents(mouseOrTouch: string) {\n        // Touch Start\n        this.on(events[mouseOrTouch].onTouchStart, (event: PIXI.interaction.InteractionEvent) => {\n            this._processTouchStart(event);\n        });\n\n        // TouchMove\n        if (!this._dragListener) this._dragListener = dragListener[this._options.axes];\n        this._addWindowListener(events[mouseOrTouch].onTouchMove, (event: TouchEvent | MouseEvent) => {\n            this._processTouchMove(event);\n        });\n\n        // Touch End\n        this._addWindowListener(\n            events[mouseOrTouch].onTouchEnd, (event: TouchEvent | MouseEvent) => {\n                this._processTouchEnd(event);\n            }\n        );\n    }\n}","import { Joystick } from './joystick';\nimport { GeneralController } from './general-controller';\n\nimport { IStickOptions } from './istick-options';\nimport { IController } from './icontroller';\n\nimport { dragListener } from './drag-listener';\nimport { isMouseEvent, magnitude, sign, unitVector } from './util';\n\nimport { events } from './events';\n\nimport * as PIXI from 'pixi.js';\n\nexport interface IStickAreaOptions extends IStickOptions {\n    [key: string]: any;\n    debug?: boolean;\n}\n\nfunction generateColor() {\n    let color = 0;\n    let primary = Math.floor(Math.random() * 3);\n\n    for (let i = 0; i < 3; i++) {\n        color = color << 8;\n        color += 155 + Math.floor(Math.random() * 100);\n    }\n\n    return color;\n}\n\n\nexport class StickAreaController extends GeneralController {\n\n    protected _area: PIXI.Graphics;\n\n    protected _options: IStickAreaOptions = {\n        debug: false,\n        mouse: true,\n        touch: true,\n        axes: 'xy',\n        deadZone: 0, // TODO: Implement deadZone\n        nub: null,\n        nubSize: 0.3,\n        well: null,\n        wellRadius: 50,\n    }\n\n    /*******************/\n    /*** Constructor ***/\n    /*******************/\n    constructor(x: number, y: number, width: number, height: number, options: IStickAreaOptions) {\n        super(x, y, options);\n\n        if (options) {\n            for (let prop in options) {\n                if (options.hasOwnProperty(prop)) {\n                    this._options[prop] = options[prop];\n                }\n            }\n        }\n\n        this._area = new PIXI.Graphics();\n        this._area.beginFill(generateColor(), this._options.debug ? 0.7 : 0);\n        this._area.drawRect(0, 0, width, height);\n        this._area.endFill();\n\n        this.addChild(this._area);\n    }\n\n    protected _init() {\n        this._joystick = new Joystick(0, 0, this._options);\n    }\n\n    protected _initEvents(mouseOrTouch: string) {\n        // Touch Start\n        this.on(events[mouseOrTouch].onTouchStart, (event: PIXI.interaction.InteractionEvent) => {\n            this._spawnStick(event.data.getLocalPosition(this));\n            this._processTouchStart(event);\n        });\n\n        // TouchMove\n        if (!this._dragListener) this._dragListener = dragListener[this._options.axes];\n        this._addWindowListener(events[mouseOrTouch].onTouchMove, (event: TouchEvent | MouseEvent) => {\n            this._processTouchMove(event);\n        });\n\n        // Touch End\n        this._addWindowListener(\n            events[mouseOrTouch].onTouchEnd, (event: TouchEvent | MouseEvent) => {\n                if (this._processTouchEnd(event)) {\n                    this._despawnStick();\n                }\n            }\n        );\n    }\n\n    private _despawnStick() {\n        this._area.removeChild(this._joystick);\n    }\n\n    private _spawnStick(position: PIXI.Point) {\n        this._area.addChild(this._joystick);\n        this._joystick.x = position.x;\n        this._joystick.y = position.y;\n    }\n}","import { StickController } from './stick-controller';\nimport { StickAreaController } from './stick-area-controller';\n\nconst pixiStick = {\n    StickController:StickController,\n    StickAreaController:StickAreaController\n}\n\nexport default pixiStick;"],"names":["vec","Math","sqrt","x","y","outVec","PIXI","mag","magnitude","value","event","button","undefined","options","_axes","_registeredEventListeners","prop","hasOwnProperty","_options","interactive","_init","mouse","_initEvents","touch","GeneralController","_id","Error","eventString","func","push","addEventListener","identifier","data","isTouched","isMouseEvent","originalEvent","_dragListener","changedTouches","onTouchStart","i","length","resetPosition","onAxisChange","stopPropagation","forEach","arr","removeEventListener","_joystick","nub","_initGraphics","well","alpha","opacity","width","wellRadius","height","anchor","axes","beginFill","drawCircle","endFill","drawRoundedRect","nubSize","warn","addChild","mapPositionToPoint","autoDetectRenderer","noWebGL","renderer","window","capturedRenderer","plugins","interaction","bind","dragListener","clientX","clientY","toLocal","onTouchMove","abs","sign","events","Joystick","mouseOrTouch","on","_processTouchStart","_addWindowListener","_processTouchMove","onTouchEnd","_processTouchEnd","color","primary","floor","random","_area","generateColor","debug","drawRect","_spawnStick","getLocalPosition","_this","_despawnStick","removeChild","position","pixiStick","StickController","StickAreaController"],"mappings":"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"}